%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/iron/.*$
%global __requires_exclude_from ^/opt/ros/iron/.*$

Name:           ros-iron-realsense2-camera
Version:        4.55.1
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS realsense2_camera package

License:        Apache License 2.0
URL:            http://www.ros.org/wiki/RealSense
Source0:        %{name}-%{version}.tar.gz

Requires:       eigen3-devel
Requires:       ros-iron-builtin-interfaces
Requires:       ros-iron-cv-bridge
Requires:       ros-iron-diagnostic-updater
Requires:       ros-iron-geometry-msgs
Requires:       ros-iron-image-transport
Requires:       ros-iron-launch-ros
Requires:       ros-iron-librealsense2
Requires:       ros-iron-nav-msgs
Requires:       ros-iron-rclcpp
Requires:       ros-iron-rclcpp-components
Requires:       ros-iron-realsense2-camera-msgs
Requires:       ros-iron-sensor-msgs
Requires:       ros-iron-std-msgs
Requires:       ros-iron-tf2
Requires:       ros-iron-tf2-ros
Requires:       ros-iron-ros-workspace
BuildRequires:  eigen3-devel
BuildRequires:  ros-iron-ament-cmake
BuildRequires:  ros-iron-builtin-interfaces
BuildRequires:  ros-iron-cv-bridge
BuildRequires:  ros-iron-diagnostic-updater
BuildRequires:  ros-iron-geometry-msgs
BuildRequires:  ros-iron-image-transport
BuildRequires:  ros-iron-librealsense2
BuildRequires:  ros-iron-nav-msgs
BuildRequires:  ros-iron-rclcpp
BuildRequires:  ros-iron-rclcpp-components
BuildRequires:  ros-iron-realsense2-camera-msgs
BuildRequires:  ros-iron-ros-environment
BuildRequires:  ros-iron-sensor-msgs
BuildRequires:  ros-iron-std-msgs
BuildRequires:  ros-iron-tf2
BuildRequires:  ros-iron-tf2-ros
BuildRequires:  ros-iron-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%if 0%{?with_tests}
BuildRequires:  python%{python3_pkgversion}-numpy
BuildRequires:  python%{python3_pkgversion}-requests
BuildRequires:  python3-tqdm
BuildRequires:  ros-iron-ament-cmake-gtest
BuildRequires:  ros-iron-ament-cmake-pytest
BuildRequires:  ros-iron-launch-pytest
BuildRequires:  ros-iron-launch-testing
BuildRequires:  ros-iron-ros2topic
BuildRequires:  ros-iron-sensor-msgs-py
BuildRequires:  ros-iron-tf2-ros-py
%endif

%description
RealSense camera package allowing access to Intel D400 3D cameras

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/iron/setup.sh" ]; then . "/opt/ros/iron/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/iron" \
    -DAMENT_PREFIX_PATH="/opt/ros/iron" \
    -DCMAKE_PREFIX_PATH="/opt/ros/iron" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/iron/setup.sh" ]; then . "/opt/ros/iron/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/iron/setup.sh" ]; then . "/opt/ros/iron/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/iron

%changelog
* Tue May 28 2024 LibRealSense ROS Team <librs.ros@intel.com> - 4.55.1-1
- Autogenerated by Bloom

* Sun Jul 02 2023 LibRealSense ROS Team <librs.ros@intel.com> - 4.54.1-2
- Autogenerated by Bloom

